services:
  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  mongodb:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DBNAME}

  web:
    build:
      context: ./services/web
      dockerfile: Dockerfile
    volumes:
      - ./services/web:/app 
    ports:
      - "8080:8080"

  consumer:
    build:
      context: ./services/consumer
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mongodb
      - redis
    restart: unless-stopped
    environment:
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGODB_DBNAME=${MONGODB_DBNAME}

  producercron:
    image: ubuntu:20.04
    build:
      context: ./services/producer
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - redis
    restart: unless-stopped

volumes:
  redis_data:
  rabbitmq_data:
  mongodb_data:
