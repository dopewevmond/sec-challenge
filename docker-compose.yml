version: '3.8'

services:

  redis:
    image: redis:latest
    hostname: redis
    volumes:
      - redis_data:/data

  rabbit:
    hostname: ${RABBITMQ_HOST}
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mongodb:
    image: mongo:latest
    hostname: ${MONGO_DB_HOST}
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DBNAME}

  web:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: web
    volumes:
      - .:/app 
    ports:
      - "8080:8080"
    links:
      - rabbit
      - redis
      - mongodb
    env_file:
      - .env

  worker:
    build:
      context: .
      dockerfile: ./Worker.Dockerfile
    links:
      - rabbit
      - redis
      - mongodb
    depends_on:
      - rabbit
      - mongodb
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - WRITE_QUEUE_NAME=${WRITE_QUEUE_NAME}
      - MONGODB_HOST=${MONGO_DB_HOST}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGODB_DBNAME=${MONGODB_DBNAME}

volumes:
  redis_data:
  rabbitmq_data:
  mongodb_data:
